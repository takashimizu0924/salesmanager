[{"/Users/takashi/my-app/src/index.js":"1","/Users/takashi/my-app/src/App.js":"2","/Users/takashi/my-app/src/reportWebVitals.js":"3","/Users/takashi/my-app/src/Components/Content.js":"4","/Users/takashi/my-app/src/Components/Sidebar.js":"5","/Users/takashi/my-app/src/Components/AddSales.js":"6","/Users/takashi/my-app/src/Components/Maingraph.js":"7","/Users/takashi/my-app/src/Components/ShowSales.js":"8","/Users/takashi/my-app/src/Components/SalesList.js":"9"},{"size":448,"mtime":1612961192203,"results":"10","hashOfConfig":"11"},{"size":839,"mtime":1615730885381,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610970342733,"results":"13","hashOfConfig":"11"},{"size":2305,"mtime":1614920326468,"results":"14","hashOfConfig":"11"},{"size":6918,"mtime":1615730439780,"results":"15","hashOfConfig":"11"},{"size":12189,"mtime":1615729346637,"results":"16","hashOfConfig":"11"},{"size":1574,"mtime":1615261365829,"results":"17","hashOfConfig":"11"},{"size":2682,"mtime":1615720187265,"results":"18","hashOfConfig":"11"},{"size":2089,"mtime":1615801329497,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"dbhbrp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/takashi/my-app/src/index.js",[],["42","43"],"/Users/takashi/my-app/src/App.js",[],"/Users/takashi/my-app/src/reportWebVitals.js",[],"/Users/takashi/my-app/src/Components/Content.js",[],"/Users/takashi/my-app/src/Components/Sidebar.js",[],"/Users/takashi/my-app/src/Components/AddSales.js",["44","45","46","47","48","49","50","51","52","53","54","55","56"],"import React from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from '@material-ui/core/Card';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport  { Button, Grid, MenuItem, Select, useFormControl }  from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { useForm } from 'react-hook-form';\n\nimport ShowSales from \"./ShowSales\";\n\nimport Data from '../workData/WorkItem.json'\n\n// 作業項目選択\n// import FormControl from '@material-ui/core/FormControl';\n// import Select from '@material-ui/core/Select';\n// import InputLabel from '@material-ui/core/InputLabel';\n\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',  \n        marginTop: 30,\n    },\n    carfContent:{\n        padding:30,\n    },\n    card: {\n        marginLeft: 1,\n        marginRight:1,\n    },\n    formControl:{\n        width:500,\n    },\n});\n\n/*\nconst rows = [\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n    { id:0,date:'2021/3/01',recipetNumber:'1017402004005',name:'清水',workItem:'2.2kﾋｮｳｼﾞｭﾝｺｳｼﾞ',quantity:1,price:'7700'},\n\n];\n*/\n\nvar quantity_clickFlg = false;\nvar id_data = 0;\nvar date_data;\nvar recipe_data;\nvar name_data;\nvar workItem_data;\nvar quantity_data = 0;\nvar price_data = 0;\n\nvar rows = [];\n\nconst workItems = [\n    {\n        value : 'エアコン工事',\n        label : 'エアコン工事',\n    },\n    {\n        value : 'アンテナ工事',\n        label : 'アンテナ工事',\n    },\n    {\n        value : 'ウォシュレット工事',\n        label : 'ウォシュレット工事',\n    },\n    {\n        value : '照明工事',\n        label : '照明工事',\n    },\n    {\n        value : 'その他工事',\n        label : 'その他工事',\n    },\n];\n\n\nvar workName = Data.data.work.root\n\n// 情報初期化処理\nconst GlobalBufferInit = () => {\n    quantity_clickFlg = false;\n    quantity_data = 0;\n    price_data = 0;\n}\n\n// 工事内容判別用関数\nconst WorkContents = (workItem) => {\n    var result_map_data;\n    // グローバル変数に格納\n    workItem_data = workItem;\n\n    if (workItem === 'エアコン工事'){\n        workName = Data.data.work.エアコン工事\n\n    }else if (workItem === 'アンテナ工事'){\n        workName = Data.data.work.アンテナ工事\n    \n    }else{\n        workName = Data.data.work.other\n    }\n\n    return workName\n}\n\n// Price情報取得関数\nconst GetPriceData = (quantity, arg_name, arg_contents) => {\n    // Json解析オブジェクト生成\n    const obj_from_root = Data.data;\n    var obj_name = obj_from_root.work[arg_name];\n    var property;\n    var calc_data;\n    var flag = GetPriceFlag();\n    quantity_data = quantity;\n    \n\n\n    for(var idx in obj_name){\n        property = Object.keys(obj_name[idx]);\n        for(var k in property){\n            if(obj_name[idx][property[k]] == arg_contents){\n                price_data = obj_name[idx][property[++k]];\n                console.log(obj_name[idx][property[k]]);\n                console.log(obj_name[idx][property[++k]]);\n                break;\n            }\n        }\n    }\n    \n    if(flag == false){\n        calc_data = price_data * quantity_data;\n        console.log(flag);\n    }else{\n        SetPriceFlag(false);\n        calc_data = price_data;\n        console.log(flag);\n    }\n\n    console.log(obj_name);\n    //console.log(obj_price);\n    console.log(arg_name);\n    console.log(arg_contents);\n\n    return calc_data;\n}\n\n// 金額入力フラグ設定関数\nconst SetPriceFlag = (flg) => {\n    return quantity_clickFlg = flg;\n}\n\n// 金額入力フラグ取得関数\nconst GetPriceFlag = () => {\n    return quantity_clickFlg;\n}\n\nconst AddSales = () => {\n    const mainData = {}\n    const AddItem = () => {\n        var data_object = {\n            id:id_data,\n            date:date_data,\n            recipetNumber:recipe_data,\n            name:name_data,\n            workItem:workItem_data,\n            quantity:quantity_data,\n            price:price_data\n        };\n\n        id_data++;\n        // console.log(name,workItem,work);\n        console.log(workItem,work);\n        console.log(id_data,date_data,recipe_data,name_data,workItem_data,quantity_data,price_data);\n        rows.push(data_object);\n        GlobalBufferInit();\n    };\n    const classes = useStyles();\n    const { handleSubmit } = useForm();\n    const [name, setName ] = React.useState();\n    const [workItem, setWorkItem] = React.useState(\"\");\n    const [work, setWork] = React.useState(\"\");\n    const [price, setPrice] = React.useState(\"\");\n    // const [showPrice, setShowPrice] = React.useState(\"\");\n\n    const handleChange = (event) => {setWorkItem(event.target.value)};\n    const handleWorkChange = (event) => {setWork(event.target.value)};\n    const handlePriceFlgChange = () => {SetPriceFlag(true)};\n    \n    // React.useEffect(() => {\n    //     const testShowPrice = () =>{\n    //         console.log(\"test\")\n    //     };\n    //     testShowPrice();\n    // },[showPrice])\n\n    return (\n        <>\n            <Grid container justify=\"center\" className={classes.root}>\n                <Grid item xs={8}>\n                    <Card className={classes.carfContent} >\n                        <CardContent>\n                            <Typography variant=\"h5\">\n                                売上入力\n                            </Typography>\n                            <form onSubmit={handleSubmit(AddItem)}>\n                                <Grid container spacing={2} justify=\"flex-end\">\n                                    <Grid item xs={3} >\n                                        {/* <DatePicker /> */}\n                                        <TextField type=\"date\" onInput={e => date_data = e.target.value} variant=\"outlined\">\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={4}>\n                                        <TextField onInput={e => recipe_data = e.target.value} fullWidth label=\"伝票番号\" variant=\"outlined\"></TextField>\n                                    </Grid>\n                                    <Grid item xs={5}>\n                                        <TextField onInput={e => name_data = e.target.value} fullWidth label=\"お客様名\" variant=\"outlined\"></TextField>\n                                    </Grid>\n                                    <Grid item xs={4}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        select\n                                        label=\"セレクト\"\n                                        value={workItem}\n                                        onChange={handleChange}\n                                        onInput={e => setWorkItem(e.target.value)}>\n                                            {workItems.map((val) => (\n                                            <MenuItem key={val.value} value={val.value} >\n                                                {val.label}\n                                            </MenuItem>))}\n                                    </TextField>\n                                        {/* <SelectWorkItem /> */}\n                                    </Grid>\n                                    <Grid item xs={8}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        select\n                                        label=\"工事内容\"\n                                        value={work}\n                                        onInput={e => setWork(e.target.value)}\n                                        onChange={handleWorkChange}>\n                                            {WorkContents(workItem).map((val) =>(\n                                                <MenuItem key = {val.name} value={val.name}>\n                                                    {val.name}\n                                                </MenuItem>\n                                            ))}\n                                    </TextField>\n                                        {/* <SelectWork /> */}\n                                    </Grid>\n                                        <Grid item xs={3}>\n                                            <TextField onInput={e => price_data = GetPriceData(e.target.value, workItem, work)} fullWidth label=\"数量\" variant=\"outlined\"></TextField>\n                                        </Grid>\n                                        <Grid item xs={4}>\n                                            {/* {WorkContents(workItem).map((val) =>(          \n                                            \n                                            ))} */}\n                                            <TextField\n                                                fullWidth label=\"金額\" \n                                                //value={price_data}\n                                                onClick={handlePriceFlgChange}\n                                                // onChange={() => setShowPrice(price_data)}\n                                                onInput={e => price_data = e.target.value}\n                                                variant=\"outlined\">\n                                            </TextField>\n                                            \n                                        </Grid>\n                                        <Grid item xs={2} alignContent=\"center\" alignItems=\"center\">\n                                            <Button variant=\"outlined\" color=\"primary\" size=\"large\" type=\"submit\">登録</Button>\n                                        </Grid>\n                                </Grid>\n                            </form>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={8}>\n                    <ShowSales rows={rows}/>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default AddSales;\n","/Users/takashi/my-app/src/Components/Maingraph.js",[],"/Users/takashi/my-app/src/Components/ShowSales.js",["57"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',      \n    },\n    container: {\n        maxHeight: 440,\n    },\n});\n\nconst columns = [\n    { id: 'date',label:'完了日',minWidth:170 },\n    { id: 'recipetNumber',label:'伝票番号',minWidth:170 },\n    { id: 'name',label:'お客様名',minWidth:170 },\n    { id: 'workItem',label:'工事内容',minWidth:170 },\n    { id: 'quantity',label:'数量',minWidth:170 },\n    { id: 'price',label:'金額',minWidth:170 },\n\n];\n\n\nconst ShowSales = (rows) => {\n    const classes = useStyles();\n    console.log(rows.rows)\n    \n    // const [page, setPage] = React.useState(0);\n    // const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    // const handleChangePage = (event, newPage) => {\n    //     setPage(newPage);\n    // };\n\n    return (\n        <Paper className={classes.root}>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader >\n                    <TableHead>\n                        <TableRow>\n                            { columns.map((column) => (\n                                <TableCell key={ column.id }\n                                           style={{ minWidth: column.minWidth }}\n                                >\n                                    { column.label }\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.rows.map((row,index) => \n                        <TableRow key={ index } >\n                            <TableCell>{ row.date}</TableCell>\n                            <TableCell>{ row.recipetNumber}</TableCell>\n                            <TableCell>{ row.name}</TableCell>\n                            <TableCell>{ row.workItem}</TableCell>\n                            <TableCell>{ row.quantity}</TableCell>\n                            <TableCell>{ row.price}</TableCell>\n                        </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Paper>\n    )\n}\n\nexport default ShowSales\n","/Users/takashi/my-app/src/Components/SalesList.js",["58","59","60"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { MenuItem, TextField } from '@material-ui/core';\nconst columns = [\n    { id: 'date',label:'完了日',minWidth:170 },\n    { id: 'recipetNumber',label:'伝票番号',minWidth:170 },\n    { id: 'name',label:'お客様名',minWidth:170 },\n    { id: 'workItem',label:'工事内容',minWidth:170 },\n    { id: 'quantity',label:'数量',minWidth:170 },\n    { id: 'price',label:'金額',minWidth:170 },\n\n];\n\nconst selectDate = [\n    {\n        value:\"3月\"\n    },\n    {\n        value:\"4月\"\n    },\n    {\n        value:\"5月\"\n    },\n    {\n        value:\"6月\"\n    },\n    {\n        value:\"7月\"\n    },\n    {\n        value:\"8月\"\n    },\n]\n\nconst SalesList = () => {\n    return (\n        <Paper>\n            <TableContainer>\n                <Table>\n                    <TableHead>\n                        <TextField fullWidth select >\n                            { selectDate.map((val) =>(\n                                <MenuItem key={val.value} value={val.value}>\n                                    {val.value}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                        <TableRow>\n                            { columns.map((column) => (\n                                <TableCell key={ column.id }>\n                                    { column.label }\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                </Table>\n            </TableContainer>\n        </Paper>\n    )\n}\n\nexport default SalesList\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":8,"column":35,"nodeType":"67","messageId":"68","endLine":8,"endColumn":41},{"ruleId":"65","severity":1,"message":"69","line":8,"column":43,"nodeType":"67","messageId":"68","endLine":8,"endColumn":57},{"ruleId":"65","severity":1,"message":"70","line":10,"column":8,"nodeType":"67","messageId":"68","endLine":10,"endColumn":20},{"ruleId":"65","severity":1,"message":"71","line":12,"column":3,"nodeType":"67","messageId":"68","endLine":12,"endColumn":26},{"ruleId":"65","severity":1,"message":"72","line":13,"column":3,"nodeType":"67","messageId":"68","endLine":13,"endColumn":21},{"ruleId":"65","severity":1,"message":"73","line":110,"column":9,"nodeType":"67","messageId":"68","endLine":110,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":142,"column":43,"nodeType":"76","messageId":"77","endLine":142,"endColumn":45},{"ruleId":"74","severity":1,"message":"75","line":151,"column":13,"nodeType":"76","messageId":"77","endLine":151,"endColumn":15},{"ruleId":"65","severity":1,"message":"78","line":179,"column":11,"nodeType":"67","messageId":"68","endLine":179,"endColumn":19},{"ruleId":"65","severity":1,"message":"79","line":200,"column":12,"nodeType":"67","messageId":"68","endLine":200,"endColumn":16},{"ruleId":"65","severity":1,"message":"80","line":200,"column":18,"nodeType":"67","messageId":"68","endLine":200,"endColumn":25},{"ruleId":"65","severity":1,"message":"81","line":203,"column":12,"nodeType":"67","messageId":"68","endLine":203,"endColumn":17},{"ruleId":"65","severity":1,"message":"82","line":203,"column":19,"nodeType":"67","messageId":"68","endLine":203,"endColumn":27},{"ruleId":"65","severity":1,"message":"83","line":9,"column":8,"nodeType":"67","messageId":"68","endLine":9,"endColumn":23},{"ruleId":"65","severity":1,"message":"84","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":20},{"ruleId":"65","severity":1,"message":"85","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":17},{"ruleId":"65","severity":1,"message":"83","line":9,"column":8,"nodeType":"67","messageId":"68","endLine":9,"endColumn":23},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'useFormControl' is defined but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'result_map_data' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'mainData' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'TablePagination' is defined but never used.","'makeStyles' is defined but never used.","'TableBody' is defined but never used.","no-global-assign","no-unsafe-negation"]